import{_ as i,c as a,o as n,ag as h}from"./chunks/framework.DPDPlp3K.js";const g=JSON.parse('{"title":"bridge","description":"","frontmatter":{},"headers":[],"relativePath":"docker/network.md","filePath":"docker/network.md"}'),k={name:"docker/network.md"};function l(t,s,p,e,F,r){return n(),a("div",null,s[0]||(s[0]=[h(`<p>docker network 有三种模式</p><ul><li>bridge(default) 桥接</li><li>host 主机</li><li>none 无</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 可以通过以下命令查看</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> network</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NETWORK</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      DRIVER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    SCOPE</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">4f699915b4f4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   bridge</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    bridge</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    local</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ca5b537b5358</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   host</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      host</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      local</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">593abd797fe1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   none</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      null</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      local</span></span></code></pre></div><h1 id="bridge" tabindex="-1">bridge <a class="header-anchor" href="#bridge" aria-label="Permalink to &quot;bridge&quot;">​</a></h1><h2 id="默认" tabindex="-1">默认 <a class="header-anchor" href="#默认" aria-label="Permalink to &quot;默认&quot;">​</a></h2><p>docker有一个默认bridge网络,通过docker0虚拟网桥实现容器与外部通信,可以在主机上查看</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> show</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">3:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker0:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">BROADCAST,MULTICAST,UP,LOWER_U</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mtu</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1500</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> qdisc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> noqueue</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> state</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> UP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> group</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    link/ether</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 36:72:66:bc:2c:e8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> brd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ff:ff:ff:ff:ff:ff</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    inet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 172.17.0.1/16</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> brd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 172.17.255.255</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scope</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">       valid_lft</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> forever</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> preferred_lft</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> forever</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    inet6</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fe80::3472:66ff:febc:2ce8/64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scope</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> link</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> proto</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kernel_ll</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">       valid_lft</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> forever</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> preferred_lft</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> forever</span></span></code></pre></div><p>默认bridge网络下,不同容器之间只能通过ip访问,需要通过--link参数添加其他容器ip-name对应</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在容器a2上添加一个a1的链接</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -itd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alpine</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -itd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --link</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a1:aaa</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alpine</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 进入a2容器,可以看到是通过hosts文件实现name-ip对应</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AAA</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AAA_NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/a2/aaa</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/hosts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aaa</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">172.17.0.2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      aaa</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 600915164d2a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a1</span></span></code></pre></div><p>link参数是单向通信，若需互相通信，则需要对所有容器指定link参数。当容器数量多时,就会非常麻烦。所以已不推荐使用，建议使用自定义bridge。</p><h2 id="自定义bridge" tabindex="-1">自定义bridge <a class="header-anchor" href="#自定义bridge" aria-label="Permalink to &quot;自定义bridge&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建一个docker网络,默认为bridge模式</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> network</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bridge1</span></span></code></pre></div><p>自定义bridge可以使用dns服务,在容器中直接通过容器名访问其他容器</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建俩个容器连接bridge1网络</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -itd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --network=bridge1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name=a1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alpine:latest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -itd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --network=bridge1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name=a2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alpine:latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 进入a1容器,可以通过a2名称访问a2容器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ping</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PING</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (172.18.0.3): 56 data bytes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bytes</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 172.18.0.3:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> seq=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ttl=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> time=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.257</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ms</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">---</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ping</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> statistics</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ---</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> packets</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> transmitted,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> packets</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> received,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 0%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> packet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> loss</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">round-trip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> min/avg/max</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 0.257/0.257/0.257</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ms</span></span></code></pre></div><h1 id="host" tabindex="-1">host <a class="header-anchor" href="#host" aria-label="Permalink to &quot;host&quot;">​</a></h1><p>容器直接使用主机的网络 <em><strong>优点</strong></em></p><ul><li>无需nat转化,性能高 <em><strong>缺点</strong></em></li><li>当容器较多时容易造成端口冲突,生产风险较高</li></ul><h1 id="none" tabindex="-1">none <a class="header-anchor" href="#none" aria-label="Permalink to &quot;none&quot;">​</a></h1><p>容器不使用网络</p>`,19)]))}const C=i(k,[["render",l]]);export{g as __pageData,C as default};
