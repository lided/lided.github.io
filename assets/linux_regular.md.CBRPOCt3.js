import{_ as e,c as n,o as a,ag as l}from"./chunks/framework.DPDPlp3K.js";const o=JSON.parse('{"title":"POSIX","description":"","frontmatter":{"order":3},"headers":[],"relativePath":"linux/regular.md","filePath":"linux/regular.md"}'),s={name:"linux/regular.md"};function d(r,t,i,c,p,g){return a(),n("div",null,t[0]||(t[0]=[l(`<p>在linux中常见的正则表达式有下面三种标准</p><ul><li>POSIX <ul><li>BRE(Basic Regular Expressions)</li><li>ERE(Extended Regular Expressions)</li></ul></li><li>PCRE(Perl Compatible Regular Expressions)</li></ul><h1 id="posix" tabindex="-1">POSIX <a class="header-anchor" href="#posix" aria-label="Permalink to &quot;POSIX&quot;">​</a></h1><table tabindex="0"><thead><tr><th style="text-align:center;">字符</th><th style="text-align:center;">含义</th><th style="text-align:center;">BRE</th><th style="text-align:center;">ERE</th><th></th></tr></thead><tbody><tr><td style="text-align:center;">^</td><td style="text-align:center;">行首</td><td style="text-align:center;">√</td><td style="text-align:center;">√</td><td></td></tr><tr><td style="text-align:center;">$</td><td style="text-align:center;">行尾</td><td style="text-align:center;">√</td><td style="text-align:center;">√</td><td></td></tr><tr><td style="text-align:center;">.</td><td style="text-align:center;">所有字符(除了换行符)</td><td style="text-align:center;">√</td><td style="text-align:center;">√</td><td></td></tr><tr><td style="text-align:center;">[ ]</td><td style="text-align:center;">选取括号中任意字符</td><td style="text-align:center;">√</td><td style="text-align:center;">√</td><td>[abc]匹配abc任意一个<br>[^abc]匹配除了abc之外的任意一个</td></tr><tr><td style="text-align:center;">*</td><td style="text-align:center;">前一个字符任意次(&gt;=0)</td><td style="text-align:center;">√</td><td style="text-align:center;">√</td><td></td></tr><tr><td style="text-align:center;">+</td><td style="text-align:center;">前一个字符任意次(&gt;0)</td><td style="text-align:center;">需转义</td><td style="text-align:center;">√</td><td></td></tr><tr><td style="text-align:center;">?</td><td style="text-align:center;">前一个字符0次或1次</td><td style="text-align:center;">需转义</td><td style="text-align:center;">√</td><td></td></tr><tr><td style="text-align:center;">|</td><td style="text-align:center;">逻辑或</td><td style="text-align:center;">需转义</td><td style="text-align:center;">√</td><td></td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;">前一个字符指定次数</td><td style="text-align:center;">需转义</td><td style="text-align:center;">√</td><td>{m}m次; {m,n}m-n次; <br>{,n}0-n次; {m,}m-∞次;</td></tr><tr><td style="text-align:center;">( )</td><td style="text-align:center;">指定范围分组</td><td style="text-align:center;">需转义</td><td style="text-align:center;">√</td><td></td></tr></tbody></table><p><em><strong>预定义字符类</strong></em></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[[:digit:]] 任意数字 同[0-9]</span></span>
<span class="line"><span>[[:alnum:]] 任意字母、数字、下划线,即大部分语言变量定义要求 同[0-9a-zA-Z_]</span></span>
<span class="line"><span>[[:space:]] 任意空白字符(空格,换行等)</span></span></code></pre></div><h1 id="pcre" tabindex="-1">PCRE <a class="header-anchor" href="#pcre" aria-label="Permalink to &quot;PCRE&quot;">​</a></h1><p>来自<strong>Perl</strong>语言,在POSIX标准基础上增加了很多高级功能,被很多编程语言使用</p><p><em><strong>预定义字符类</strong></em></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>\\d 匹配数字 同[0-9]</span></span>
<span class="line"><span>\\D 匹配非数字 同[^0-9]</span></span>
<span class="line"><span>\\w 匹配字母、数字、下划线 同[0-9A-Za-z_]</span></span>
<span class="line"><span>\\W 匹配非字母、数字、下划线 同[^0-9A-Za-z_]</span></span>
<span class="line"><span>\\s 任意空白字符(空格,换行等)</span></span>
<span class="line"><span>\\S 任意非空白字符(空格,换行等)</span></span></code></pre></div>`,10)]))}const y=e(s,[["render",d]]);export{o as __pageData,y as default};
